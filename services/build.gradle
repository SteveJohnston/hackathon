apply plugin: 'net.researchgate.release'
apply plugin: 'gradle-one-jar'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

defaultTasks 'build', 'jacoco', 'install'

mainClassName = 'com.travelsupermarket.latedeals.LateDealsApplication'

release {
    failOnSnapshotDependencies = false
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

tasks.jacocoTestReport.dependsOn(test)

dependencies {
    compile 'io.dropwizard:dropwizard-core:0.9.2',
            'io.dropwizard:dropwizard-client:1.0.4',
            'ru.vyarus:dropwizard-guicey:3.2.0',
            'com.google.inject:guice:4.0',
            'com.google.guava:guava:19.0',
            'org.joda:joda-money:0.10.0'

    compile(group: 'com.travelsupermarket.services', name: 'http-errors', version: '1.11.8') {
        exclude(group: 'com.fasterxml.jackson.core')
    }
    compile(group: 'com.msm.utils', name: 'utils-jackson', version: '2.0.4-SNAPSHOT') {
        exclude(group: 'com.fasterxml.jackson.core')
    }
    compile(group: 'com.moneysupermarket', name: 'application-dropwizard_2.10', version: '9.2.0') {
        exclude(group: 'com.sun.jersey')
    }

    compile(group: 'com.moneysupermarket', name: 'mongodb_2.10', version: '9.2.0') {
        exclude(group: 'com.sun.jersey')
    }
    compile(group: 'org.json', name: 'json', version: '20160810')

    testCompile 'org.mockito:mockito-core:2.0.2-beta',
            'org.hamcrest:hamcrest-all:1.3',
            'junit:junit:4.12',
            'io.dropwizard:dropwizard-testing:0.9.2'

}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}

task oneJar(type: OneJar) {
    mainClass = mainClassName
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task copyConf(type: Copy) {
    def confDir = file("$buildDir/conf")
    from '../conf'
    into confDir
    outputs.dir confDir
}

distributions {
    main {
        contents {
            from(copyConf) {
                into "conf"
            }
        }
    }
}

artifacts {
    oneJar
    archives sourcesJar
}

run {
    args 'server', '../conf/dev_configuration.yml'
}

artifactory {
    contextUrl = 'http://artifactory-eu1.travelsupermarket.com/artifactory'
    publish {
        repository {
            if (project.version.endsWith('-SNAPSHOT')) {
                repoKey = 'libs-snapshot-local'
            } else {
                repoKey = 'libs-release-local'
            }
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact javadocJar
            artifact sourcesJar
            artifact distZip
        }
    }
}
